LINEAR SEARCHING___________________________________________

#include <iostream>
using namespace std;
int main() {
    int arr[] = {3,2,10,5,9};
    int length = sizeof (arr)/sizeof (arr[0]);
    int value = 15;
    int index = -1;
    for(int i=0;i<length;i++){
        if(arr[i]== value){
            index = i;
            break;
        }
    }
            if(index ==-1){
                cout<<"not found";
            }
            else{
                cout<<"found at index"<<endl;
            }
} 

Output:
not found

BINARY SERCHING______________________________________________

#include<iostream>
using namespace std;
int main() {
    int arr[] = {10,20,40,80,100};
    int value = 80;
    int index = -1;
    int n= sizeof(arr)/sizeof(arr[0]);
    int low = 0;
    int high = n-1;
    while(low <= high){
        int mid =(low+high)/2;
        if(arr[mid]==value){
            index = mid;
            break;
        }
        else if(arr[mid]<value){
            low=mid+1; 
        }
        else{
            high = mid - 1;
        }
    }
    if(index==-1){
        cout<<"not found";
    
    }
    else {
        cout<<"found at index"<<index;
    }
}
Output:
found at index3

INTERPOLATION SEARCHING_________________________________

#include<iostream>
using namespace std;
int main() {
    int arr[] = {10,20,30,40,50};
    int value = 30;
    int index = -1;
    int n= sizeof(arr)/sizeof(arr[0]);
    int low = 0;
    int high = n-1;
    while(low <= high){
        int pos = low+((value-arr[low])*(high-low)) / (arr[high]-arr[low]) ;
        if(arr[pos]==value){
            index = pos;
            break;
        }
        else if(arr[pos]<value){
            low=pos+1; 
        }
        else{
            high = pos - 1;
        }
    }
    if(index==-1){
        cout<<"not found";
    
    }
    else {
        cout<<"found at index"<<index;
    }
}

Output:
found at index2
